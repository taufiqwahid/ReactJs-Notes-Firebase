{"version":3,"sources":["config/firebase/index.js","containers/pages/Dashboard/index.js","config/redux/action/index.js","components/atoms/Button/index.js","containers/pages/Login/index.js","containers/pages/Register/index.js","config/redux/reducer/index.js","config/redux/store/index.js","containers/pages/Homepage/index.js","containers/pages/Logout/index.js","containers/pages/App/index.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","Dashboard","state","title","content","data","onInputChange","e","type","setState","target","value","handleSaveNotes","dataUser","JSON","parse","localStorage","getItem","console","log","date","Date","getTime","userId","uid","undefined","alert","props","history","push","saveNotes","this","getNotes","notes","className","placeholder","onChange","name","id","rows","onClick","length","delay","transitionDuration","map","note","key","handleOnClick","Component","connect","userData","isUser","dispatch","ref","addDataToFirebase","Promise","resolve","reject","on","snapshot","val","Object","keys","Button","loading","disabled","Login","email","password","handleChangeValue","handleLoginSubmit","a","loginAPI","catch","err","action","autoComplete","isLoading","auth","signInWithEmailAndPassword","then","res","user","verication","emailVerified","refreshToken","setItem","stringify","error","errorCode","code","errorMessage","message","loginUserAPI","Register","handleRegisterValue","registerAPI","createUserWithEmailAndPassword","registerUserAPI","initialState","popUp","isLogin","reducer","store","createStore","applyMiddleware","thunk","Homepage","Logout","removeItem","App","exact","from","to","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ac0db308.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyA3fAvJa4l6v19mWUCFaWdLKj9IoBgmvd4\",\r\n  authDomain: \"reactjs-notes-10b1b.firebaseapp.com\",\r\n  databaseURL: \"https://reactjs-notes-10b1b.firebaseio.com\",\r\n  projectId: \"reactjs-notes-10b1b\",\r\n  storageBucket: \"reactjs-notes-10b1b.appspot.com\",\r\n  messagingSenderId: \"65211879809\",\r\n  appId: \"1:65211879909:web:3ae38ef1cdcb2e01fe5f0c\",\r\n  measurementId: \"G-8GSGZQ44ST\",\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// Get a reference to the database service\r\nexport const database = firebase.database();\r\n\r\nexport default firebase;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../Dashboard/Dashboard.scss\";\r\nimport {\r\n  addDataToFirebase,\r\n  getDataToFirebase,\r\n} from \"../../../config/redux/action\";\r\nimport FadeIn from \"react-fade-in\";\r\n\r\nexport class Dashboard extends Component {\r\n  state = {\r\n    title: \"\",\r\n    content: \"\",\r\n    data: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (localStorage.getItem(\"dataUser\")) {\r\n      const dataUser = JSON.parse(localStorage.getItem(\"dataUser\"));\r\n      this.props.getNotes(dataUser.uid);\r\n    } else {\r\n      alert(\"Silahkan Login atau Register terlebih dahulu\");\r\n      const { history } = this.props;\r\n      history.push(\"/ReactJs-Notes-Firebase/register\");\r\n      // history.push(\"/register\");\r\n    }\r\n  }\r\n\r\n  onInputChange = (e, type) => {\r\n    this.setState({\r\n      [type]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSaveNotes = () => {\r\n    const { title, content } = this.state;\r\n    const dataUser = JSON.parse(localStorage.getItem(\"dataUser\"));\r\n    console.log(\"localStorage\", dataUser);\r\n\r\n    const data = {\r\n      title: title,\r\n      content: content,\r\n      date: new Date().getTime(),\r\n      userId: dataUser.uid,\r\n    };\r\n\r\n    if (data.userId === undefined) {\r\n      alert(\"Silahkan Login Dlu\");\r\n      console.log(\"Tidak Ditemukan UID, Silahkan Login\");\r\n      this.setState({\r\n        title: \"\",\r\n        content: \"\",\r\n        data: \"\",\r\n      });\r\n      const { history } = this.props;\r\n      history.push(\"/ReactJs-Notes-Firebase/login\");\r\n      // history.push(\"/login\");\r\n    } else {\r\n      this.setState({\r\n        title: \"\",\r\n        content: \"\",\r\n        data: \"\",\r\n      });\r\n      if (title && content) {\r\n        this.props.saveNotes(data);\r\n      } else {\r\n        alert(\"Lengkapi Title dan Contentnya terlebih dahulu\");\r\n      }\r\n    }\r\n    console.log(\"SAVE NOTES = \", data);\r\n  };\r\n\r\n  handleOnClick() {\r\n    alert(\"Belum berfungsi menghapus hehe\");\r\n  }\r\n\r\n  render() {\r\n    const { title, content } = this.state;\r\n    const { notes } = this.props;\r\n    console.log(\"NOTES:\", notes);\r\n    return (\r\n      <div className=\"notes\">\r\n        <h1>Simple Notes Firebase</h1>\r\n        <div className=\"inputContent\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Title\"\r\n            value={title}\r\n            onChange={(e) => this.onInputChange(e, \"title\")}\r\n          />\r\n          <textarea\r\n            name=\"content\"\r\n            id=\"content\"\r\n            rows=\"5\"\r\n            placeholder=\"content\"\r\n            value={content}\r\n            onChange={(e) => this.onInputChange(e, \"content\")}\r\n          ></textarea>\r\n          <button onClick={this.handleSaveNotes}>Simpan</button>\r\n        </div>\r\n        <hr />\r\n        {notes.length > 0 ? (\r\n          <Fragment>\r\n            <FadeIn delay={50} transitionDuration={1000}>\r\n              {notes.map((note) => {\r\n                return (\r\n                  <div className=\"container\" key={note.id}>\r\n                    <div className=\"content\">\r\n                      <h4 className=\"title\">{note.data.title}</h4>\r\n                      <h4 className=\"close\" onClick={this.handleOnClick}>\r\n                        X\r\n                      </h4>\r\n                      <p className=\"tanggal\">{note.data.date}</p>\r\n                      <p className=\"contentNotes\">{note.data.content}</p>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </FadeIn>\r\n          </Fragment>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst reduxState = (state) => ({\r\n  userData: state.isUser,\r\n  notes: state.notes,\r\n});\r\n\r\nconst reduxDispatch = (dispatch) => {\r\n  return {\r\n    saveNotes: (data) => dispatch(addDataToFirebase(data)),\r\n    getNotes: (data) => dispatch(getDataToFirebase(data)),\r\n  };\r\n};\r\n\r\n// connect(statenya, nilai state yg ingin diubah)\r\nexport default connect(reduxState, reduxDispatch)(Dashboard);\r\n","import firebase from \"../../firebase\";\r\n\r\nexport const registerUserAPI = (data) => (dispatch) => {\r\n  dispatch({ type: \"CHANGE_ISLOADING\", value: true });\r\n  return new Promise((resolve, reject) => {\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(data.email, data.password)\r\n      .then((res) => {\r\n        console.log(\"Create = \", res);\r\n        dispatch({ type: \"CHANGE_ISLOADING\", value: false });\r\n        alert(\"Sukses Menambahkan Data ke Firebase\");\r\n        resolve(true);\r\n      })\r\n      .catch((error) => {\r\n        dispatch({ type: \"CHANGE_ISLOADING\", value: false });\r\n        // Handle Errors here.\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        console.log(\"errorCode = \", errorCode);\r\n        console.log(\"errorMessage = \", errorMessage);\r\n\r\n        if (errorMessage) {\r\n          alert(\"Ada kesalahan dalam mengimput Email ataupun Password\");\r\n        }\r\n        reject(false);\r\n      });\r\n  });\r\n};\r\n\r\nexport const loginUserAPI = (data) => (dispatch) => {\r\n  dispatch({ type: \"CHANGE_ISLOADING\", value: true });\r\n  return new Promise((resolve, reject) => {\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(data.email, data.password)\r\n      .then((res) => {\r\n        const dataUser = {\r\n          uid: res.user.uid,\r\n          email: res.user.email,\r\n          verication: res.user.emailVerified,\r\n          refreshToken: res.user.refreshToken,\r\n        };\r\n\r\n        console.log(\"SignIn = \", res);\r\n\r\n        //localStorage\r\n        localStorage.setItem(\"dataUser\", JSON.stringify(dataUser));\r\n\r\n        dispatch({ type: \"CHANGE_ISLOADING\", value: false });\r\n        dispatch({ type: \"CHANGE_ISLOGIN\", value: true });\r\n        dispatch({ type: \"CHANGE_ISUSER\", value: dataUser });\r\n        alert(\"Sukses Login Menggunakan Firebase\");\r\n        resolve(true);\r\n      })\r\n      .catch((error) => {\r\n        dispatch({ type: \"CHANGE_ISLOADING\", value: false });\r\n        dispatch({ type: \"CHANGE_ISLOGIN\", value: false });\r\n        // Handle Errors here.\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        console.log(\"errorCode = \", errorCode);\r\n        console.log(\"errorMessage = \", errorMessage);\r\n\r\n        if (errorMessage) {\r\n          alert(\"Ada kesalahan dalam mengimput Email ataupun Password\");\r\n        }\r\n        reject(false);\r\n      });\r\n  });\r\n};\r\n\r\nexport const addDataToFirebase = (data) => (dispatch) => {\r\n  firebase\r\n    .database()\r\n    .ref(\"notes/\" + data.userId)\r\n    .push({\r\n      title: data.title,\r\n      content: data.content,\r\n      date: data.date,\r\n    });\r\n};\r\n\r\nexport const getDataToFirebase = (userId) => (dispatch) => {\r\n  return new Promise((resolve, reject) => {\r\n    const urlNotes = firebase.database().ref(\"notes/\" + userId);\r\n    urlNotes.on(\"value\", function (snapshot) {\r\n      console.log(\"GetData = \", snapshot.val());\r\n      const data = [];\r\n\r\n      if (snapshot.val()) {\r\n        Object.keys(snapshot.val()).map((key) => {\r\n          return data.push({\r\n            id: key,\r\n            data: snapshot.val()[key],\r\n          });\r\n        });\r\n      } else {\r\n        const { history } = this.props;\r\n        history.push(\"/ReactJs-Notes-Firebase/register\");\r\n        // history.push(\"/register\");\r\n      }\r\n      dispatch({ type: \"SET_NOTES\", value: data });\r\n      resolve(snapshot.val());\r\n    });\r\n  });\r\n};\r\n\r\nexport const deleteDataToFirebase = (data) => (dispatch) => {\r\n  return new Promise((resolve, reject) => {});\r\n};\r\n","import React from \"react\";\r\n\r\nconst Button = ({ onClick, value, loading, className }) => {\r\n  if (loading) {\r\n    return (\r\n      <input type=\"submit\" value=\"Proces...\" className={className} disabled />\r\n    );\r\n  } else {\r\n    return (\r\n      <input\r\n        type=\"submit\"\r\n        className={className}\r\n        value={value}\r\n        onClick={onClick}\r\n      />\r\n    );\r\n  }\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Button from \"../../../components/atoms/Button\";\r\nimport { loginUserAPI } from \"../../../config/redux/action\";\r\nimport \"../Login/Login.scss\";\r\n\r\nexport class Login extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  handleChangeValue = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n      loading: false,\r\n    });\r\n  };\r\n\r\n  handleLoginSubmit = async () => {\r\n    const { email, password } = this.state;\r\n    const res = await this.props\r\n      .loginAPI({ email: email, password: password })\r\n      .catch((err) => err);\r\n\r\n    if (res === true) {\r\n      const { history } = this.props;\r\n      //cek hasil dari resolve di action menggunakan Promise\r\n      console.log(\"Login sukses!\");\r\n      this.setState({\r\n        email: \"\",\r\n        password: \"\",\r\n      });\r\n      history.push(\"/\");\r\n    } else {\r\n      console.log(\"Login Gagal!\");\r\n      this.setState({\r\n        email: \"\",\r\n        password: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"login\">\r\n        <form action=\"#\">\r\n          <h2>Login Page</h2>\r\n          <input\r\n            id=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            onChange={this.handleChangeValue}\r\n            autoComplete=\"off\"\r\n            value={this.state.email}\r\n          />\r\n          <input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            onChange={this.handleChangeValue}\r\n            value={this.state.password}\r\n          />\r\n          <Button\r\n            className=\"submit\"\r\n            onClick={this.handleLoginSubmit}\r\n            value=\"Login\"\r\n            loading={this.props.isLoading}\r\n          />\r\n        </form>\r\n\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst reduxState = (state) => {\r\n  return {\r\n    isLoading: state.isLoading,\r\n  };\r\n};\r\n\r\nconst reduxDispatch = (dispatch) => {\r\n  return {\r\n    loginAPI: (data) => dispatch(loginUserAPI(data)),\r\n  };\r\n};\r\n// connect(statenya, nilai state yg ingin diubah)\r\nexport default connect(reduxState, reduxDispatch)(Login);\r\n","import React, { Component } from \"react\";\r\nimport \"./Register.scss\";\r\n// import firebase from \"../../../config/firebase\";\r\n\r\nimport Button from \"../../../components/atoms/Button\";\r\n\r\nimport { registerUserAPI } from \"../../../config/redux/action\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Register extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  handleChangeValue = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n      loading: false,\r\n    });\r\n  };\r\n\r\n  handleRegisterValue = async () => {\r\n    const { email, password } = this.state;\r\n    const res = await this.props\r\n      .registerAPI({ email: email, password: password })\r\n      .catch((err) => err);\r\n\r\n    if (res === true) {\r\n      this.setState({\r\n        email: \"\",\r\n        password: \"\",\r\n      });\r\n    }\r\n    const { history } = this.props;\r\n    history.push(\"/ReactJs-Notes-Firebase/login\");\r\n    // history.push(\"/login\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"register\">\r\n        <form action=\"#\">\r\n          <h2>Register Page</h2>\r\n          <input\r\n            id=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            onChange={this.handleChangeValue}\r\n            autoComplete=\"off\"\r\n            value={this.state.email}\r\n          />\r\n          <input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            onChange={this.handleChangeValue}\r\n            value={this.state.password}\r\n          />\r\n          <Button\r\n            className=\"submit\"\r\n            onClick={this.handleRegisterValue}\r\n            value=\"Registration\"\r\n            loading={this.props.isLoading}\r\n          />\r\n        </form>\r\n\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst reduxState = (state) => {\r\n  return {\r\n    isLoading: state.isLoading,\r\n  };\r\n};\r\n\r\nconst reduxDispatch = (dispatch) => {\r\n  return {\r\n    registerAPI: (data) => dispatch(registerUserAPI(data)),\r\n  };\r\n};\r\nexport default connect(reduxState, reduxDispatch)(Register);\r\n","// INISIALISASI DATA YANG INGIN DIGUNAKAN DI PROPS\r\n// UNTUK DI KIRIM KAN KE STORE\r\n\r\nconst initialState = {\r\n  //membuat nilai state/ props data\r\n  popUp: \"PopUp\",\r\n  isLoading: false,\r\n  isLogin: false,\r\n  isUser: {},\r\n  notes: [],\r\n};\r\n\r\n// data yang sudah di ubah dikirim kembali ke state global\r\nconst reducer = (state = initialState, action) => {\r\n  if (action.type === \"CHANGE_POPUP\") {\r\n    return {\r\n      ...state,\r\n      popUp: action.value,\r\n    };\r\n  }\r\n  if (action.type === \"CHANGE_ISLOADING\") {\r\n    return {\r\n      ...state,\r\n      isLoading: action.value,\r\n    };\r\n  }\r\n  if (action.type === \"CHANGE_ISLOGIN\") {\r\n    return {\r\n      ...state,\r\n      isLogin: action.value,\r\n    };\r\n  }\r\n  if (action.type === \"CHANGE_ISUSER\") {\r\n    return {\r\n      ...state,\r\n      isUser: action.value,\r\n    };\r\n  }\r\n  if (action.type === \"SET_NOTES\") {\r\n    return {\r\n      ...state,\r\n      notes: action.value,\r\n    };\r\n  }\r\n  return state;\r\n};\r\n\r\n//menggunakan default karena tidak menggunakan kurung kurawal\r\nexport default reducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport reducer from \"../reducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n//MEMBUAT STORE DATA DARI STATE YANG DI INISIALISASI DARI REDUCER\r\nexport const store = createStore(reducer, applyMiddleware(thunk));\r\n\r\n// ALUR DARI REDUCER KE PEMBUATAN STORE TERUS KE APLIKASI PENGIMPLEMENTASIAN NYA (DI LOGIN)\r\n\r\n// REDUCER\r\n// VCREATE STORE(REDUCER)\r\n// CONNECT (STATE, DISPATCH)\r\n\r\n// SETELAH ITU LALU MENGGUNAKAN\r\n","import React, { Component } from \"react\";\r\nimport \"../Homepage/Homepage.scss\";\r\nexport default class Homepage extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Selamat Datang Di Simple Notes With Firebase</h1>\r\n        <h3>Silahkan Login atau Register terlebih dahulu</h3>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Logout extends Component {\r\n  componentDidMount() {\r\n    localStorage.removeItem(\"dataUser\");\r\n    const { history } = this.props;\r\n    history.push(\"/login\");\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Data Login Telah Terhapus</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport Dashboard from \"../Dashboard\";\nimport Login from \"../Login\";\nimport Register from \"../Register\";\nimport {\n  BrowserRouter as Router,\n  Link,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"../../../config/redux\";\nimport \"./App.scss\";\nimport Homepage from \"../Homepage\";\nimport Logout from \"../Logout\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"wrapper\">\n          <div className=\"nav\">\n            <Redirect\n              exact\n              from=\"/ReactJs-Notes-Firebase/\"\n              to=\"/ReactJs-Notes-Firebase/home\"\n            />\n\n            <Link className=\"link\" to=\"/ReactJs-Notes-Firebase/home\">\n              Home\n            </Link>\n\n            <Link className=\"link\" to=\"/ReactJs-Notes-Firebase/dashboard\">\n              Dashboard\n            </Link>\n\n            <Link className=\"link\" to=\"/ReactJs-Notes-Firebase/login\">\n              Login\n            </Link>\n\n            <Link className=\"link\" to=\"/ReactJs-Notes-Firebase/register\">\n              Register\n            </Link>\n\n            <Link className=\"link\" to=\"/ReactJs-Notes-Firebase/logout\">\n              Logout\n            </Link>\n          </div>\n          <Route\n            path=\"/ReactJs-Notes-Firebase/home\"\n            exact\n            component={Homepage}\n          />\n          <Route\n            path=\"/ReactJs-Notes-Firebase/dashboard\"\n            component={Dashboard}\n          />\n          <Route path=\"/ReactJs-Notes-Firebase/login\" component={Login} />\n          <Route path=\"/ReactJs-Notes-Firebase/register\" component={Register} />\n          <Route path=\"/ReactJs-Notes-Firebase/logout\" component={Logout} />\n        </div>\n      </Router>\n    </Provider>\n  );\n  // return (\n  //   <Provider store={store}>\n  //     <Router>\n  //       <div className=\"wrapper\">\n  //         <div className=\"nav\">\n  //           <Redirect exact from=\"/\" to=\"home\" />\n\n  //           <Link className=\"link\" to=\"/home\">\n  //             Home\n  //           </Link>\n\n  //           <Link className=\"link\" to=\"/dashboard\">\n  //             Dashboard\n  //           </Link>\n\n  //           <Link className=\"link\" to=\"/login\">\n  //             Login\n  //           </Link>\n\n  //           <Link className=\"link\" to=\"/register\">\n  //             Register\n  //           </Link>\n\n  //           <Link className=\"link\" to=\"/logout\">\n  //             Logout\n  //           </Link>\n  //         </div>\n  //         <Route path=\"/home\" exact component={Homepage} />\n  //         <Route path=\"/dashboard\" component={Dashboard} />\n  //         <Route path=\"/login\" component={Login} />\n  //         <Route path=\"/register\" component={Register} />\n  //         <Route path=\"/logout\" component={Logout} />\n  //       </div>\n  //     </Router>\n  //   </Provider>\n  // );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/pages/App/index.js\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}